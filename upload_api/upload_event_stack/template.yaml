AWSTemplateFormatVersion : "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Dakobed Rest API Service



Parameters:
  BucketName:
    Type: String
    Default: dakobed-mir-upload-bucket
Resources:
  Bucket:
    Type: AWS::S3::Bucket
    DependsOn:
      - ProcessingLambdaPermission
    Properties:
      BucketName: !Ref BucketName
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:*
            Function: !GetAtt VerifyUploadFunction.Arn

  ProcessingLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref VerifyUploadFunction
      Principal: s3.amazonaws.com
      SourceArn: !Sub 'arn:aws:s3:::${BucketName}'
      SourceAccount: !Ref AWS::AccountId


  ProcessingLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
        - PolicyName: allowLogging
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - logs:*
              Resource: arn:aws:logs:*:*:*
        - PolicyName: getAndDeleteObjects
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - s3:GetObject
              - s3:DeleteObject
              Resource:  !Sub 'arn:aws:s3:::${BucketName}/*'

#  ProcessingLambdaFunction:
#    Type: AWS::Lambda::Function
#    Properties:
#      CodeUri: handlers/verify_upload
#      Handler: index.handler
#      Role: !GetAtt ProcessingLambdaExecutionRole.Arn
#      MemorySize: 512
#      Timeout: 120

  VerifyUploadFunction:
    Type: AWS::Serverless::Function
    Properties:
      Timeout: 10
      FunctionName: VerifyUploadFunction
#      Policies:
#        - SQSSendMessagePolicy:
#            QueueName: InitiateTransformsQueue
#        - AWSLambdaBasicExecutionRole
#        - DynamoDBCrudPolicy:
#            TableName: !Ref UserUploadTable
      CodeUri: handlers/verify_upload
      Handler: app.lambda_handler
      Runtime: python3.7
      Role: !GetAtt ProcessingLambdaExecutionRole.Arn

